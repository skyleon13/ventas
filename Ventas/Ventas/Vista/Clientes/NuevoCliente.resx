<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsTAAALEwEAmpwYAAACxElE
        QVRYR73Xu88MURzG8SWhEKEgShVxv4YQ0fNfaBCF0LkkCpWCQkVN6ZIoXENCQUJDQ0UlQtDSELfns+/O
        Zvb2zs7svp7km505e87vOTPn9pvWmJofVoWj4Xp4Hb6Fvx1cK/OfOupqM7EE2RYuhnfhV2D4M3wN7zu4
        VuY/ddTVZnOYFxppeTgbPgWBP4dr4VjYF9aHlR02dMr8dyPokDYfwpkgVi3p+YPwO+jAubApLAhVWhi2
        hvNBp8UQS8yxtD28Cp7gXtgRmoynNruCGGKJKfas0ksVjeOlsCJMKjHEElPsjWGojNP9oLcaLA7Tklhi
        in0nLAs9MlNNOBXuhmk8eb/EfBh4nFZQlrH5GEy4nQrmSLsDD16Wd1fWrJ6Z7dOSlXAwLGrfzcibvhB4
        +W1rdbBxWDJbFExBluyL8CMcUFASjy/hbbBjtrfOP8EmM846rxLz58FTPgnrQlk8bgaehxUwVvm4mwlV
        Nn8c1oRhOhnUueLGIWIf3+9mAo1rTrx48m59D/Zu+3lT1TEnXjx5txs50Rwq/TKDjwQGo1TXnHjx1GbW
        DjA3k58Gp1+/mphTTwckE17HsD2awbOgYn8nmpoTL568Kyeh8WJedMKyEqCpOfVMwnGWYbkTNpiXnesm
        5tSzDIuNSCYjmRilcicmMedxK/A8pMB2aFs0Jj0HxBDphNPSkbpWQQPx4NXdiqk4jKRRVUnk0rBk5rK2
        yocRr64cEBJIB5Ijc660NziIeA3kiLJXPZPDzVVC8ijwOKWgX/8rJbsdBlKyQuWk9HKYxpsQQ6zKpLRQ
        OS33yqTWTdPyPaF47WJWpuWFLDdLrfgwMXO9nTofJtqY1Na7WGLWknGSvUogPYFgMpkTYdSnmf9sMta5
        Nma7CTdyzKvkNRZPU/fj1Dp3YDUZvgEJYteSw10Nb0L/57kye7s6Y36et1r/AEQR5J32NcHyAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAIAAAAAAAAAAAAAAAAAAAAEAAAADwAAAA8AAAAEAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAMAAAAAAAAAAAAAADMAAACBAAAAvAAAAOAAAADwAAAA8AAAAOAAAAC8AAAAgQAAADMAAAABAAAAAAAA
        AAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAADAAAAAAAAAEAAAADBAAAA/wAAAP8AAAD/AAAA/wAAAPUAAAD1AAAA/wAAAP8AAAD/AAAA/wAA
        AMIAAABBAAAAAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAAAAAAgAAACYAAAA/wAAAP8AAADmAAAAjgAAAEgAAAAiAAAAEgAAABIAAAAiAAAASAAA
        AI4AAADmAAAA/wAAAP8AAACYAAAACAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAASAAAAxQAAAP8AAADyAAAAeAAAAAwAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAwAAAB4AAAA8gAAAP8AAADEAAAAEgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAACQAAAMIAAAD/AAAA2gAAAC0AAAAAAAAAAgAAAAQAAAADAAAAAgAA
        AAEAAAABAAAAAgAAAAMAAAAEAAAAAgAAAAAAAAAtAAAA2gAAAP8AAADCAAAACAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACYAAAA/wAAAN8AAAAYAAAAAAAAAAcAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAAAAAAAAAYAAAA4AAAAP8AAACXAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAARgAAAP8AAAD+AAAA+AAAAG8AAAAAAAAAAAAA
        AAIAAAAEAAAAAgAAAAEAAAABAAAAAQAAAAEAAAADAAAABAAAAAIAAAAAAAAAAQAAAHIAAAD4AAAA/gAA
        AP8AAABGAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAC/AAAA/wAAAL4AAADzAAAA/wAA
        ALkAAAAwAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAADIAAAC7AAAA/wAA
        APMAAAC+AAAA/wAAAL8AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAIAAAAAAAAANgAAAP8AAADlAAAACgAA
        AEkAAADnAAAA/wAAAPsAAAC6AAAAZQAAADEAAAAYAAAAEAAAABEAAAAYAAAAMgAAAGcAAAC8AAAA/AAA
        AP8AAADmAAAARwAAAAoAAADlAAAA/wAAADYAAAAAAAAAAgAAAAAAAAAAAAAABAAAAAAAAAB/AAAA/wAA
        AI8AAAAAAAAAAQAAABQAAACJAAAA7gAAAP8AAAD+AAAA/wAAAPsAAADzAAAA8wAAAPsAAAD/AAAA/gAA
        AP8AAADtAAAAhgAAABMAAAABAAAAAAAAAI8AAAD/AAAAfwAAAAAAAAAEAAAAAAAAAAAAAAACAAAAAAAA
        ALoAAAD/AAAASwAAAAAAAAAGAAAAAgAAAAAAAAATAAAAXQAAAKIAAADUAAAA7AAAAO4AAADuAAAA6wAA
        ANIAAACgAAAAWgAAABIAAAAAAAAAAgAAAAYAAAAAAAAASwAAAP8AAAC6AAAAAAAAAAIAAAAAAAAAAQAA
        AAAAAAAEAAAA3gAAAP8AAAAkAAAAAAAAAAIAAAABAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAHAAA
        ABwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAABAAAAAgAAAAAAAAAkAAAA/wAAAN0AAAAEAAAAAAAA
        AAEAAAABAAAAAAAAAA4AAADvAAAA9QAAABMAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAUAAAAAAAAAUAAA
        ALwAAADoAAAA6AAAALwAAABRAAAAAAAAAAUAAAABAAAAAAAAAAAAAAABAAAAAAAAABMAAAD1AAAA7wAA
        AA4AAAAAAAAAAQAAAAEAAAAAAAAADgAAAO8AAAD1AAAAEwAAAAAAAAABAAAAAAAAAAAAAAACAAAAAAAA
        AIkAAAD/AAAA/gAAAPkAAAD5AAAA/gAAAP8AAACJAAAAAAAAAAIAAAAAAAAAAAAAAAEAAAAAAAAAEwAA
        APUAAADvAAAADgAAAAAAAAABAAAAAQAAAAAAAAAEAAAA3gAAAP8AAAAkAAAAAAAAAAIAAAAAAAAAAwAA
        AAAAAABTAAAA/wAAAPUAAABsAAAAFAAAABQAAABsAAAA9QAAAP8AAABTAAAAAAAAAAMAAAAAAAAAAgAA
        AAAAAAAkAAAA/wAAAN4AAAAEAAAAAAAAAAEAAAAAAAAAAgAAAAAAAAC6AAAA/wAAAEsAAAAAAAAAAwAA
        AAAAAAACAAAAAAAAALoAAAD/AAAAbAAAAAAAAAADAAAAAwAAAAAAAABsAAAA/wAAALoAAAAAAAAAAgAA
        AAAAAAADAAAAAAAAAEoAAAD/AAAAugAAAAAAAAACAAAAAAAAAAAAAAAEAAAAAAAAAH8AAAD/AAAAjwAA
        AAAAAAAEAAAAAQAAAAAAAAAMAAAA6gAAAPoAAAAaAAAAAAAAAAMAAAADAAAAAAAAABoAAAD6AAAA6gAA
        AAwAAAAAAAAAAQAAAAQAAAAAAAAAjwAAAP8AAAB/AAAAAAAAAAQAAAAAAAAAAAAAAAIAAAAAAAAANgAA
        AP8AAADkAAAAEQAAAAAAAAACAAAAAAAAAAwAAADqAAAA+gAAABoAAAAAAAAAAwAAAAMAAAAAAAAAGgAA
        APoAAADpAAAADAAAAAAAAAACAAAAAAAAABEAAADjAAAA/wAAADYAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAvAAAAP8AAAB4AAAAAAAAAAUAAAABAAAAAAAAALoAAAD/AAAAawAAAAAAAAADAAAAAwAA
        AAAAAABsAAAA/wAAALoAAAAAAAAAAQAAAAUAAAAAAAAAeAAAAP8AAAC8AAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAABGAAAA/wAAAPQAAAAxAAAAAAAAAAgAAAAAAAAAUwAAAP8AAAD1AAAAawAA
        ABQAAAAUAAAAbAAAAPUAAAD/AAAAUwAAAAAAAAAIAAAAAAAAADEAAAD0AAAA/wAAAEUAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACXAAAA/wAAANYAAAAbAAAAAAAAAAcAAAAAAAAAiAAA
        AP8AAAD+AAAA+AAAAPgAAAD+AAAA/wAAAIkAAAAAAAAABwAAAAAAAAAbAAAA1wAAAP8AAACXAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAkAAADCAAAA/wAAANcAAAAtAAAAAAAA
        AAMAAAAAAAAAUwAAAMEAAADuAAAA7gAAAMEAAABTAAAAAAAAAAMAAAAAAAAALQAAANcAAAD/AAAAwgAA
        AAkAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAABIAAADEAAAA/wAA
        APIAAAB4AAAADAAAAAAAAAABAAAAAAAAAAcAAAAHAAAAAAAAAAEAAAAAAAAADAAAAHgAAADyAAAA/wAA
        AMQAAAASAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AAgAAACZAAAA/wAAAP8AAADmAAAAjgAAAEsAAAAkAAAADwAAAA8AAAAjAAAASwAAAI0AAADlAAAA/wAA
        AP8AAACZAAAACAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAwAAAAAAAABBAAAAwQAAAP8AAAD/AAAA/wAAAP8AAAD2AAAA9gAAAP8AAAD/AAAA/wAA
        AP8AAADCAAAAQQAAAAAAAAADAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAABAAAAMwAAAIEAAAC8AAAA4AAAAPAAAADwAAAA4AAA
        ALwAAACBAAAAMwAAAAEAAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAAAAAAAAAAAEAAAADwAA
        AA8AAAAFAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+gX//9CQv/9lCm/+kACX/SAAS/qAABX1AvQK8ggBBOISZIRkGAECZAT
        yAkgAAAEIgAARCJAAkRCFChCQkgSQkIQCEJCIARCIiJERCJCQkQhQkKEkSJEiZCgBQmIUAoRyCgUE9QK
        UCvqAABX9IABL/pAAl/9lCm//0JC///oF/8=
</value>
  </data>
</root>